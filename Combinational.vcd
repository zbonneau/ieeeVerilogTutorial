$date
	Tue Feb 13 10:19:05 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module Combinational_tb $end
$var wire 4 ! vect [3:0] $end
$var wire 16 " regOut [15:0] $end
$var wire 16 # numOut [15:0] $end
$var wire 1 $ lreg $end
$var wire 16 % lNumOut [15:0] $end
$var wire 1 & diff2 $end
$var wire 1 ' diff1 $end
$var wire 1 ( continuous $end
$var reg 1 ) A $end
$var reg 1 * B $end
$var reg 1 + C $end
$var reg 1 , D $end
$var reg 16 - numIn [15:0] $end
$scope module uut $end
$var wire 1 ) A $end
$var wire 1 * B $end
$var wire 1 + C $end
$var wire 1 , D $end
$var wire 1 ( continuous $end
$var wire 16 . numIn [15:0] $end
$var wire 16 / numOut [15:0] $end
$var reg 16 0 lNumOut [15:0] $end
$var reg 1 $ lreg $end
$var reg 16 1 regOut [15:0] $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 2 i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop1 $end
$var integer 32 3 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx 3
b0 2
b1001001011010 1
b1001001011010 0
b1001001011010 /
b1001001011010 .
b1001001011010 -
0,
0+
0*
0)
1(
0'
0&
b1001001011010 %
1$
b1001001011010 #
b1001001011010 "
b0 !
$end
#10
b1001001011011 "
b1001001011011 1
b1 !
1,
b1 2
#20
b1001001011001 "
b1001001011001 1
1+
b10 !
0,
b10 2
#30
b10010010110100 "
b10010010110100 1
0$
0'
0(
b11 !
1,
b11 2
#40
b100100101101 "
b100100101101 1
1$
0'
1(
1*
0+
b100 !
0,
b100 2
#50
b101101000010010 "
b101101000010010 1
b101 !
1,
b101 2
#60
b1011010 "
b1011010 1
1+
b110 !
0,
b110 2
#70
b1110110110100110 "
b1110110110100110 1
b111 !
1,
b111 2
#80
b1110110110100101 %
b1110110110100101 0
b1001001011010 "
b1001001011010 1
0&
b1110110110100101 #
b1110110110100101 /
1)
0*
0+
b1000 !
0,
b1000 2
#90
b1001001011011 "
b1001001011011 1
b1001 !
1,
b1001 2
#100
b1001001011001 "
b1001001011001 1
1+
b1010 !
0,
b1010 2
#110
b10010010110100 "
b10010010110100 1
b1011 !
1,
b1011 2
#120
b100100101101 "
b100100101101 1
0'
1(
1*
0+
b1100 !
0,
b1100 2
#130
b101101000010010 "
b101101000010010 1
b1101 !
1,
b1101 2
#140
b1011010 "
b1011010 1
1+
b1110 !
0,
b1110 2
#150
b1110110110100110 "
b1110110110100110 1
0$
0'
0(
b1111 !
1,
b1111 2
#160
b11010010100101 %
b11010010100101 0
b11010010100101 "
b11010010100101 1
1$
b11010010100101 -
b11010010100101 .
0'
1(
0&
b11010010100101 #
b11010010100101 /
0)
0*
0+
b0 !
0,
b0 3
b10000 2
#170
b11010010100110 "
b11010010100110 1
b1 !
1,
b1 3
#180
b11010010100100 "
b11010010100100 1
1+
b10 !
0,
b10 3
#190
b110100101001010 "
b110100101001010 1
0$
0'
0(
b11 !
1,
b11 3
#200
b1101001010010 "
b1101001010010 1
1$
0'
1(
1*
0+
b100 !
0,
b100 3
#210
b1010010100110100 "
b1010010100110100 1
b101 !
1,
b101 3
#220
b1111111110100101 "
b1111111110100101 1
1+
b110 !
0,
b110 3
#230
b1100101101011011 "
b1100101101011011 1
b111 !
1,
b111 3
#240
b1100101101011010 %
b1100101101011010 0
b11010010100101 "
b11010010100101 1
0&
b1100101101011010 #
b1100101101011010 /
1)
0*
0+
b1000 !
0,
b1000 3
#250
b11010010100110 "
b11010010100110 1
b1001 !
1,
b1001 3
#260
b11010010100100 "
b11010010100100 1
1+
b1010 !
0,
b1010 3
#270
b110100101001010 "
b110100101001010 1
b1011 !
1,
b1011 3
#280
b1101001010010 "
b1101001010010 1
0'
1(
1*
0+
b1100 !
0,
b1100 3
#290
b1010010100110100 "
b1010010100110100 1
b1101 !
1,
b1101 3
#300
b1111111110100101 "
b1111111110100101 1
1+
b1110 !
0,
b1110 3
#310
b1100101101011011 "
b1100101101011011 1
0$
0'
0(
b1111 !
1,
b1111 3
#320
b10000 3
